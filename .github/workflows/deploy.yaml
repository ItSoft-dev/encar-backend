name: Deployment [Encar]

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_SECRET_KEY: ${{ secrets.ENV_SECRET_KEY }}
          envkey_DEBUG: ${{ secrets.ENV_DEBUG }}
          envkey_ALLOWED_HOSTS: ${{ secrets.ENV_ALLOWED_HOSTS }}
          envkey_POSTGRES_DB: ${{ secrets.ENV_POSTGRES_DB }}
          envkey_POSTGRES_USER: ${{ secrets.ENV_POSTGRES_USER }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.ENV_POSTGRES_PASSWORD }}
          envkey_POSTGRES_HOST: ${{ secrets.ENV_POSTGRES_HOST }}
          envkey_POSTGRES_PORT: ${{ secrets.ENV_POSTGRES_PORT }}
          envkey_REDIS_URL: ${{ secrets.ENV_REDIS_URL }}
          envkey_BOT_TOKEN: ${{ secrets.ENV_BOT_TOKEN }}
          envkey_CHANNEL_USERNAME: ${{ secrets.ENV_CHANNEL_USERNAME }}
          envkey_DOMAIN: ${{ secrets.ENV_DOMAIN }}
          envkey_FRONTEND_URL: ${{ secrets.ENV_FRONTEND_URL }}
          envkey_MANAGER: ${{ secrets.ENV_MANAGER }}
          file_name: .env
          fail_on_empty: false
          sort_keys: false

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Set image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha

      - name: Build & Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/EncarBackend
            echo "${{ secrets.GIT_TOKEN }}" | docker login ghcr.io -u foxdevuz --password-stdin
            docker compose down --remove-orphans
            docker image prune -af
            docker compose pull --ignore-pull-failures
            docker compose up --build -d



#       This section is commented out because we do not have a credentials for Telegram
#
#
# notify:
#    runs-on: ubuntu-latest
#    needs: deploy
#    steps:
#      - name: üì¢ Telegram Notification (Success)
#        if: success()
#        uses: appleboy/telegram-action@master
#        with:
#          to: ${{ secrets.TELEGRAM_CHAT_ID }}
#          token: ${{ secrets.TELEGRAM_TO }}
#          format: markdown
#          message: |
#            ‚úÖ *Deployment Successful*
#            User: `${{ github.actor }}`
#            Commit: `${{ github.event.commits[0].message }}`
#            Repo: `${{ github.repository }}`
#            [View Commit](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
#
#      - name: üì¢ Telegram Notification (Failure)
#        if: failure()
#        uses: appleboy/telegram-action@master
#        with:
#          to: ${{ secrets.TELEGRAM_CHAT_ID }}
#          token: ${{ secrets.TELEGRAM_TO }}
#          format: markdown
#          message: |
#            ‚ùå *Deployment Failed*
#            User: `${{ github.actor }}`
#            Commit: `${{ github.event.commits[0].message }}`
#            Repo: `${{ github.repository }}`
#            [View Commit](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
